//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SCPA.WST {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WST.WSTransaccionesSoap")]
    public interface WSTransaccionesSoap {
        
        // CODEGEN: Generating message contract since element name tarjetaRetiro from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/realizarTransaccion", ReplyAction="*")]
        SCPA.WST.realizarTransaccionResponse realizarTransaccion(SCPA.WST.realizarTransaccionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/realizarTransaccion", ReplyAction="*")]
        System.Threading.Tasks.Task<SCPA.WST.realizarTransaccionResponse> realizarTransaccionAsync(SCPA.WST.realizarTransaccionRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class realizarTransaccionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="realizarTransaccion", Namespace="http://tempuri.org/", Order=0)]
        public SCPA.WST.realizarTransaccionRequestBody Body;
        
        public realizarTransaccionRequest() {
        }
        
        public realizarTransaccionRequest(SCPA.WST.realizarTransaccionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class realizarTransaccionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string tarjetaRetiro;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string tarjetaDeposito;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int cantidad;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string concepto;
        
        public realizarTransaccionRequestBody() {
        }
        
        public realizarTransaccionRequestBody(string tarjetaRetiro, string tarjetaDeposito, int cantidad, string concepto) {
            this.tarjetaRetiro = tarjetaRetiro;
            this.tarjetaDeposito = tarjetaDeposito;
            this.cantidad = cantidad;
            this.concepto = concepto;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class realizarTransaccionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="realizarTransaccionResponse", Namespace="http://tempuri.org/", Order=0)]
        public SCPA.WST.realizarTransaccionResponseBody Body;
        
        public realizarTransaccionResponse() {
        }
        
        public realizarTransaccionResponse(SCPA.WST.realizarTransaccionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class realizarTransaccionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool realizarTransaccionResult;
        
        public realizarTransaccionResponseBody() {
        }
        
        public realizarTransaccionResponseBody(bool realizarTransaccionResult) {
            this.realizarTransaccionResult = realizarTransaccionResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WSTransaccionesSoapChannel : SCPA.WST.WSTransaccionesSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WSTransaccionesSoapClient : System.ServiceModel.ClientBase<SCPA.WST.WSTransaccionesSoap>, SCPA.WST.WSTransaccionesSoap {
        
        public WSTransaccionesSoapClient() {
        }
        
        public WSTransaccionesSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WSTransaccionesSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSTransaccionesSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSTransaccionesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SCPA.WST.realizarTransaccionResponse SCPA.WST.WSTransaccionesSoap.realizarTransaccion(SCPA.WST.realizarTransaccionRequest request) {
            return base.Channel.realizarTransaccion(request);
        }
        
        public bool realizarTransaccion(string tarjetaRetiro, string tarjetaDeposito, int cantidad, string concepto) {
            SCPA.WST.realizarTransaccionRequest inValue = new SCPA.WST.realizarTransaccionRequest();
            inValue.Body = new SCPA.WST.realizarTransaccionRequestBody();
            inValue.Body.tarjetaRetiro = tarjetaRetiro;
            inValue.Body.tarjetaDeposito = tarjetaDeposito;
            inValue.Body.cantidad = cantidad;
            inValue.Body.concepto = concepto;
            SCPA.WST.realizarTransaccionResponse retVal = ((SCPA.WST.WSTransaccionesSoap)(this)).realizarTransaccion(inValue);
            return retVal.Body.realizarTransaccionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SCPA.WST.realizarTransaccionResponse> SCPA.WST.WSTransaccionesSoap.realizarTransaccionAsync(SCPA.WST.realizarTransaccionRequest request) {
            return base.Channel.realizarTransaccionAsync(request);
        }
        
        public System.Threading.Tasks.Task<SCPA.WST.realizarTransaccionResponse> realizarTransaccionAsync(string tarjetaRetiro, string tarjetaDeposito, int cantidad, string concepto) {
            SCPA.WST.realizarTransaccionRequest inValue = new SCPA.WST.realizarTransaccionRequest();
            inValue.Body = new SCPA.WST.realizarTransaccionRequestBody();
            inValue.Body.tarjetaRetiro = tarjetaRetiro;
            inValue.Body.tarjetaDeposito = tarjetaDeposito;
            inValue.Body.cantidad = cantidad;
            inValue.Body.concepto = concepto;
            return ((SCPA.WST.WSTransaccionesSoap)(this)).realizarTransaccionAsync(inValue);
        }
    }
}
